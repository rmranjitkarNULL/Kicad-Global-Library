# âš¡ KiCad Global Library

This repository contains my **custom KiCad libraries** (symbols, footprints, 3D models, and templates).  
It is designed for **reuse across projects** and can be linked via **Git submodules** for consistency.

---

## ðŸ“‚ Repository Structure

```
symbols/         # .kicad_sym files (schematic symbol libraries)
footprints/      # .pretty folders (footprint libraries)
3dmodels/        # STEP/WRL 3D models linked to footprints
templates/       # project templates (rules, stackups, logos)
```

- **symbols/** â†’ each `.kicad_sym` file is a schematic symbol library (organized by category).  
- **footprints/** â†’ each `.pretty` folder is a footprint library containing `.kicad_mod` files. Mirrors the structure of `symbols/`.  
- **3dmodels/** â†’ STEP/WRL files for 3D rendering, linked from footprints.  
- **templates/** â†’ KiCad project templates (`.kicad_pro`, `.kicad_pcb`, etc.) with metadata (`meta/info.html`).  

---

## ðŸ”— Using This Library in KiCad

### 1. Clone the repository
```bash
git clone https://github.com/YourUser/kicad-global-lib.git
```

### 2. Or add it as a submodule inside a project
```bash
git submodule add https://github.com/YourUser/kicad-global-lib.git library/kicad-global-lib
```

### 3. Configure KiCad paths
In **Preferences â†’ Configure Paths**, add:
```
KICAD_GLOBAL_LIB = /path/to/kicad-global-lib
```

### 4. Add libraries in KiCad
- **Symbol Libraries:**  
  `$KICAD_GLOBAL_LIB/symbols/.../*.kicad_sym`  
- **Footprint Libraries:**  
  `$KICAD_GLOBAL_LIB/footprints/.../*.pretty`  
- **Templates:**  
  `$KICAD_GLOBAL_LIB/templates`  

---

## ðŸ¤– Automation (Planned)

A **Python script + Git hook** will be implemented to automatically:
- Mirror folder structures between `symbols/` and `footprints/`.  
- Ensure missing symbol/footprint directories are created.  
- Run before pushing changes to GitHub, keeping the repo consistent.  

---

## ðŸ“œ License
Choose one (e.g., MIT, CERN-OHL, or private use).
